// Code generated by entc, DO NOT EDIT.

package doctor

const (
	// Label holds the string label denoting the doctor type in the database.
	Label = "doctor"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeDoctorprescription holds the string denoting the doctorprescription edge name in mutations.
	EdgeDoctorprescription = "doctorprescription"

	// Table holds the table name of the doctor in the database.
	Table = "doctors"
	// DoctorprescriptionTable is the table the holds the doctorprescription relation/edge.
	DoctorprescriptionTable = "prescriptions"
	// DoctorprescriptionInverseTable is the table name for the Prescription entity.
	// It exists in this package in order to avoid circular dependency with the "prescription" package.
	DoctorprescriptionInverseTable = "prescriptions"
	// DoctorprescriptionColumn is the table column denoting the doctorprescription relation/edge.
	DoctorprescriptionColumn = "doctor_id"
)

// Columns holds all SQL columns for doctor fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldPassword,
	FieldName,
}

var (
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

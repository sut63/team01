// Code generated by entc, DO NOT EDIT.

package patientinfo

const (
	// Label holds the string label denoting the patientinfo type in the database.
	Label = "patient_info"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCardNumber holds the string denoting the cardnumber field in the database.
	FieldCardNumber = "card_number"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"

	// EdgeDrugallergys holds the string denoting the drugallergys edge name in mutations.
	EdgeDrugallergys = "drugallergys"
	// EdgePatientprescription holds the string denoting the patientprescription edge name in mutations.
	EdgePatientprescription = "patientprescription"

	// Table holds the table name of the patientinfo in the database.
	Table = "patient_infos"
	// DrugallergysTable is the table the holds the drugallergys relation/edge.
	DrugallergysTable = "drug_allergies"
	// DrugallergysInverseTable is the table name for the DrugAllergy entity.
	// It exists in this package in order to avoid circular dependency with the "drugallergy" package.
	DrugallergysInverseTable = "drug_allergies"
	// DrugallergysColumn is the table column denoting the drugallergys relation/edge.
	DrugallergysColumn = "patient_id"
	// PatientprescriptionTable is the table the holds the patientprescription relation/edge.
	PatientprescriptionTable = "prescriptions"
	// PatientprescriptionInverseTable is the table name for the Prescription entity.
	// It exists in this package in order to avoid circular dependency with the "prescription" package.
	PatientprescriptionInverseTable = "prescriptions"
	// PatientprescriptionColumn is the table column denoting the patientprescription relation/edge.
	PatientprescriptionColumn = "patient_id"
)

// Columns holds all SQL columns for patientinfo fields.
var Columns = []string{
	FieldID,
	FieldCardNumber,
	FieldName,
	FieldGender,
	FieldAge,
}

var (
	// CardNumberValidator is a validator for the "cardNumber" field. It is called by the builders before save.
	CardNumberValidator func(string) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	GenderValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
)

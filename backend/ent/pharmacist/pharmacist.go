// Code generated by entc, DO NOT EDIT.

package pharmacist

const (
	// Label holds the string label denoting the pharmacist type in the database.
	Label = "pharmacist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeDispensemedicine holds the string denoting the dispensemedicine edge name in mutations.
	EdgeDispensemedicine = "dispensemedicine"
	// EdgeDrugallergys holds the string denoting the drugallergys edge name in mutations.
	EdgeDrugallergys = "drugallergys"
	// EdgeOrderpharmacist holds the string denoting the orderpharmacist edge name in mutations.
	EdgeOrderpharmacist = "orderpharmacist"
	// EdgeBills holds the string denoting the bills edge name in mutations.
	EdgeBills = "Bills"

	// Table holds the table name of the pharmacist in the database.
	Table = "pharmacists"
	// DispensemedicineTable is the table the holds the dispensemedicine relation/edge.
	DispensemedicineTable = "dispense_medicines"
	// DispensemedicineInverseTable is the table name for the DispenseMedicine entity.
	// It exists in this package in order to avoid circular dependency with the "dispensemedicine" package.
	DispensemedicineInverseTable = "dispense_medicines"
	// DispensemedicineColumn is the table column denoting the dispensemedicine relation/edge.
	DispensemedicineColumn = "pharmacist_id"
	// DrugallergysTable is the table the holds the drugallergys relation/edge.
	DrugallergysTable = "drug_allergies"
	// DrugallergysInverseTable is the table name for the DrugAllergy entity.
	// It exists in this package in order to avoid circular dependency with the "drugallergy" package.
	DrugallergysInverseTable = "drug_allergies"
	// DrugallergysColumn is the table column denoting the drugallergys relation/edge.
	DrugallergysColumn = "pharmacist_id"
	// OrderpharmacistTable is the table the holds the orderpharmacist relation/edge.
	OrderpharmacistTable = "orders"
	// OrderpharmacistInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderpharmacistInverseTable = "orders"
	// OrderpharmacistColumn is the table column denoting the orderpharmacist relation/edge.
	OrderpharmacistColumn = "pharmacist_orderpharmacist"
	// BillsTable is the table the holds the Bills relation/edge.
	BillsTable = "bills"
	// BillsInverseTable is the table name for the Bill entity.
	// It exists in this package in order to avoid circular dependency with the "bill" package.
	BillsInverseTable = "bills"
	// BillsColumn is the table column denoting the Bills relation/edge.
	BillsColumn = "pharmacist_id"
)

// Columns holds all SQL columns for pharmacist fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldPassword,
	FieldName,
}

var (
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

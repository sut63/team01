/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDrugAllergy,
    EntDrugAllergyFromJSON,
    EntDrugAllergyFromJSONTyped,
    EntDrugAllergyToJSON,
    EntLevelOfDangerous,
    EntLevelOfDangerousFromJSON,
    EntLevelOfDangerousFromJSONTyped,
    EntLevelOfDangerousToJSON,
    EntMedicineType,
    EntMedicineTypeFromJSON,
    EntMedicineTypeFromJSONTyped,
    EntMedicineTypeToJSON,
    EntOrder,
    EntOrderFromJSON,
    EntOrderFromJSONTyped,
    EntOrderToJSON,
    EntPrescription,
    EntPrescriptionFromJSON,
    EntPrescriptionFromJSONTyped,
    EntPrescriptionToJSON,
    EntUnitOfMedicine,
    EntUnitOfMedicineFromJSON,
    EntUnitOfMedicineFromJSONTyped,
    EntUnitOfMedicineToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntMedicineEdges
 */
export interface EntMedicineEdges {
    /**
     * Drugallergys holds the value of the drugallergys edge.
     * @type {Array<EntDrugAllergy>}
     * @memberof EntMedicineEdges
     */
    drugallergys?: Array<EntDrugAllergy>;
    /**
     * 
     * @type {EntLevelOfDangerous}
     * @memberof EntMedicineEdges
     */
    levelOfDangerous?: EntLevelOfDangerous;
    /**
     * 
     * @type {EntMedicineType}
     * @memberof EntMedicineEdges
     */
    medicineType?: EntMedicineType;
    /**
     * Medicinepresciption holds the value of the medicinepresciption edge.
     * @type {Array<EntPrescription>}
     * @memberof EntMedicineEdges
     */
    medicinepresciption?: Array<EntPrescription>;
    /**
     * Ordermedicine holds the value of the ordermedicine edge.
     * @type {Array<EntOrder>}
     * @memberof EntMedicineEdges
     */
    ordermedicine?: Array<EntOrder>;
    /**
     * 
     * @type {EntUnitOfMedicine}
     * @memberof EntMedicineEdges
     */
    unitOfMedicine?: EntUnitOfMedicine;
}

export function EntMedicineEdgesFromJSON(json: any): EntMedicineEdges {
    return EntMedicineEdgesFromJSONTyped(json, false);
}

export function EntMedicineEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntMedicineEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'drugallergys': !exists(json, 'Drugallergys') ? undefined : ((json['Drugallergys'] as Array<any>).map(EntDrugAllergyFromJSON)),
        'levelOfDangerous': !exists(json, 'LevelOfDangerous') ? undefined : EntLevelOfDangerousFromJSON(json['LevelOfDangerous']),
        'medicineType': !exists(json, 'MedicineType') ? undefined : EntMedicineTypeFromJSON(json['MedicineType']),
        'medicinepresciption': !exists(json, 'Medicinepresciption') ? undefined : ((json['Medicinepresciption'] as Array<any>).map(EntPrescriptionFromJSON)),
        'ordermedicine': !exists(json, 'Ordermedicine') ? undefined : ((json['Ordermedicine'] as Array<any>).map(EntOrderFromJSON)),
        'unitOfMedicine': !exists(json, 'UnitOfMedicine') ? undefined : EntUnitOfMedicineFromJSON(json['UnitOfMedicine']),
    };
}

export function EntMedicineEdgesToJSON(value?: EntMedicineEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'drugallergys': value.drugallergys === undefined ? undefined : ((value.drugallergys as Array<any>).map(EntDrugAllergyToJSON)),
        'levelOfDangerous': EntLevelOfDangerousToJSON(value.levelOfDangerous),
        'medicineType': EntMedicineTypeToJSON(value.medicineType),
        'medicinepresciption': value.medicinepresciption === undefined ? undefined : ((value.medicinepresciption as Array<any>).map(EntPrescriptionToJSON)),
        'ordermedicine': value.ordermedicine === undefined ? undefined : ((value.ordermedicine as Array<any>).map(EntOrderToJSON)),
        'unitOfMedicine': EntUnitOfMedicineToJSON(value.unitOfMedicine),
    };
}



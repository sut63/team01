/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntCompany,
    EntCompanyFromJSON,
    EntCompanyFromJSONTyped,
    EntCompanyToJSON,
    EntMedicine,
    EntMedicineFromJSON,
    EntMedicineFromJSONTyped,
    EntMedicineToJSON,
    EntPharmacist,
    EntPharmacistFromJSON,
    EntPharmacistFromJSONTyped,
    EntPharmacistToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntOrderEdges
 */
export interface EntOrderEdges {
    /**
     * Company holds the value of the company edge.
     * @type {Array<EntCompany>}
     * @memberof EntOrderEdges
     */
    company?: Array<EntCompany>;
    /**
     * Medicine holds the value of the medicine edge.
     * @type {Array<EntMedicine>}
     * @memberof EntOrderEdges
     */
    medicine?: Array<EntMedicine>;
    /**
     * 
     * @type {EntPharmacist}
     * @memberof EntOrderEdges
     */
    pharmacist?: EntPharmacist;
}

export function EntOrderEdgesFromJSON(json: any): EntOrderEdges {
    return EntOrderEdgesFromJSONTyped(json, false);
}

export function EntOrderEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntOrderEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company': !exists(json, 'company') ? undefined : ((json['company'] as Array<any>).map(EntCompanyFromJSON)),
        'medicine': !exists(json, 'medicine') ? undefined : ((json['medicine'] as Array<any>).map(EntMedicineFromJSON)),
        'pharmacist': !exists(json, 'pharmacist') ? undefined : EntPharmacistFromJSON(json['pharmacist']),
    };
}

export function EntOrderEdgesToJSON(value?: EntOrderEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company': value.company === undefined ? undefined : ((value.company as Array<any>).map(EntCompanyToJSON)),
        'medicine': value.medicine === undefined ? undefined : ((value.medicine as Array<any>).map(EntMedicineToJSON)),
        'pharmacist': EntPharmacistToJSON(value.pharmacist),
    };
}


